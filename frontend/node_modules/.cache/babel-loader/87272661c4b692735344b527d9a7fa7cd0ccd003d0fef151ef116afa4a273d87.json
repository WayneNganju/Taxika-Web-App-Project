{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Documents\\\\Taxika Web App Project\\\\frontend\\\\src\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport api from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [form, setForm] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await api.post(\"/login/\", form);\n      localStorage.setItem(\"token\", res.data.access);\n      localStorage.setItem(\"role\", res.data.role);\n      alert(\"Login successful!\");\n\n      // Redirect based on role\n      if (res.data.role === \"taxpayer\") {\n        window.location.href = \"/dashboard/taxpayer\";\n      } else if (res.data.role === \"agent\") {\n        window.location.href = \"/dashboard/agent\";\n      } else {\n        window.location.href = \"/admin\";\n      }\n    } catch (err) {\n      alert(\"Invalid credentials\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"username\",\n      placeholder: \"Username\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"s1RDEz5MDr2Gx98IuwuKZpCSbNY=\");\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","LoginPage","_s","form","setForm","username","password","handleChange","e","target","name","value","handleSubmit","preventDefault","res","post","localStorage","setItem","data","access","role","alert","window","location","href","err","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","type","_c","$RefreshReg$"],"sources":["C:/Users/PC/OneDrive/Documents/Taxika Web App Project/frontend/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport api from \"../api\";\r\n\r\nexport default function LoginPage() {\r\n  const [form, setForm] = useState({ username: \"\", password: \"\" });\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await api.post(\"/login/\", form);\r\n      localStorage.setItem(\"token\", res.data.access);\r\n      localStorage.setItem(\"role\", res.data.role);\r\n      alert(\"Login successful!\");\r\n\r\n      // Redirect based on role\r\n      if (res.data.role === \"taxpayer\") {\r\n        window.location.href = \"/dashboard/taxpayer\";\r\n      } else if (res.data.role === \"agent\") {\r\n        window.location.href = \"/dashboard/agent\";\r\n      } else {\r\n        window.location.href = \"/admin\";\r\n      }\r\n    } catch (err) {\r\n      alert(\"Invalid credentials\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Login</h2>\r\n      <input name=\"username\" placeholder=\"Username\" onChange={handleChange} />\r\n      <input name=\"password\" type=\"password\" placeholder=\"Password\" onChange={handleChange} />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAEhE,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BJ,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACK,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EACvD,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,SAAS,EAAEZ,IAAI,CAAC;MAC3Ca,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,GAAG,CAACI,IAAI,CAACC,MAAM,CAAC;MAC9CH,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEH,GAAG,CAACI,IAAI,CAACE,IAAI,CAAC;MAC3CC,KAAK,CAAC,mBAAmB,CAAC;;MAE1B;MACA,IAAIP,GAAG,CAACI,IAAI,CAACE,IAAI,KAAK,UAAU,EAAE;QAChCE,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,qBAAqB;MAC9C,CAAC,MAAM,IAAIV,GAAG,CAACI,IAAI,CAACE,IAAI,KAAK,OAAO,EAAE;QACpCE,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,kBAAkB;MAC3C,CAAC,MAAM;QACLF,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MACjC;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZJ,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,oBACErB,OAAA;IAAM0B,QAAQ,EAAEd,YAAa;IAAAe,QAAA,gBAC3B3B,OAAA;MAAA2B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd/B,OAAA;MAAOU,IAAI,EAAC,UAAU;MAACsB,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAE1B;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxE/B,OAAA;MAAOU,IAAI,EAAC,UAAU;MAACwB,IAAI,EAAC,UAAU;MAACF,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAE1B;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxF/B,OAAA;MAAQkC,IAAI,EAAC,QAAQ;MAAAP,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX;AAAC7B,EAAA,CApCuBD,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}